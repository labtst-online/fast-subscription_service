"""Create models for subscription and tier

Revision ID: f772f4b5139a
Revises:
Create Date: 2025-04-02 18:48:10.611023

"""

import sqlalchemy as sa
from alembic import op
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = "f772f4b5139a"
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    # First create tables
    op.create_table(
        "tier",
        sa.Column("name", sa.VARCHAR(length=100), nullable=False),
        sa.Column("description", sa.TEXT(), nullable=True),
        sa.Column("price", sa.DOUBLE_PRECISION(precision=53), nullable=False),
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column("creator_id", sa.UUID(), nullable=False),
        sa.Column(
            "created_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            nullable=True,
        ),
        sa.Column(
            "updated_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            nullable=True,
        ),
        sa.PrimaryKeyConstraint("id", name="tier_pkey"),
    )
    op.create_index("ix_tier_name", "tier", ["name"], unique=False)
    op.create_index("ix_tier_creator_id", "tier", ["creator_id"], unique=False)

    op.create_table(
        "subscription",
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column("supporter_id", sa.UUID(), nullable=False),
        sa.Column("tier_id", sa.UUID(), nullable=False),
        sa.Column(
            "status",
            postgresql.ENUM(
                "ACTIVE", "INACTIVE", "PENDING", "CANCELLED", name="subscriptionstatus"
            ),
            nullable=True,
        ),
        sa.Column(
            "started_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column(
            "expires_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column(
            "created_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.ForeignKeyConstraint(["tier_id"], ["tier.id"], name="subscription_tier_id_fkey"),
        sa.PrimaryKeyConstraint("id", name="subscription_pkey"),
    )
    op.create_index("ix_subscription_supporter_id", "subscription", ["supporter_id"], unique=False)
    op.create_index("ix_subscription_tier_id", "subscription", ["tier_id"], unique=False)
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    # First drop subscription table and its indexes
    op.drop_index("ix_subscription_tier_id", table_name="subscription")
    op.drop_index("ix_subscription_supporter_id", table_name="subscription")
    op.drop_table("subscription")

    # Then drop tier table and its indexes
    op.drop_index("ix_tier_creator_id", table_name="tier")
    op.drop_index("ix_tier_name", table_name="tier")
    op.drop_table("tier")

    # Drop the enum type
    op.execute("DROP TYPE subscriptionstatus")
    # ### end Alembic commands ###
