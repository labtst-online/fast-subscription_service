name: Continuous Delivery

on:
  workflow_run:
    workflows: ["Continuous Integration"]
    types:
      - completed
    branches:
      - main

jobs:
  confirm_ci_success:
    name: Confirm CI Success
    runs-on: ubuntu-latest
    if: github.event.workflow_run.conclusion == 'success'
    steps:
      - name: CI Workflow Succeeded
        run: echo "CI workflow on main branch for commit ${{ github.event.workflow_run.head_sha }} was successful. Proceeding with CD."

  create_release:
    name: Create Semantic Release
    runs-on: ubuntu-latest
    needs: confirm_ci_success
    permissions:
      contents: write
      actions: write
    outputs:
      new_version: ${{ steps.semantic_release.outputs.version }}
      new_version_tag: ${{ steps.semantic_release.outputs.tag }}
      release_created: ${{ steps.semantic_release.outputs.released }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      
      - name: Run Python Semantic Release
        id: semantic_release
        uses: python-semantic-release/python-semantic-release@v9.21.1
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}

  build_and_push_image:
    name: Build and Push Docker Image to GHCR
    runs-on: ubuntu-latest
    needs: create_release
    if: needs.create_release.outputs.release_created == 'true'
    permissions:
      contents: read
      packages: write

    steps:
      - name: Get version from release job
        id: version_info
        run: |
          echo "version_tag=${{ needs.create_release.outputs.new_version_tag }}" >> $GITHUB_OUTPUT
          echo "version_num=${{ needs.create_release.outputs.new_version }}" >> $GITHUB_OUTPUT
          echo "Building image for tag: ${{ needs.create_release.outputs.new_version_tag }} (version: ${{ needs.create_release.outputs.new_version }})"

      - name: Checkout code at the new version tag
        uses: actions/checkout@v4
        with:
          ref: ${{ steps.version_info.outputs.version_tag }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to GitHub Container Registry (GHCR)
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push Docker image
        id: docker_build
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: |
            ghcr.io/${{ github.repository_owner }}/${{ github.event.repository.name }}:${{ steps.version_info.outputs.version_num }}
            ghcr.io/${{ github.repository_owner }}/${{ github.event.repository.name }}:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max
      
      - name: Image digest
        run: |
          echo "Pushed image digest: ${{ steps.docker_build.outputs.digest }}"
